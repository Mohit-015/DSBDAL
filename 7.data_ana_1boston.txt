import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the Boston Housing dataset from scikit-learn
from sklearn.datasets import load_boston
boston_data = load_boston()

# Create a DataFrame from the dataset
df = pd.DataFrame(boston_data.data, columns=boston_data.feature_names)
df['PRICE'] = boston_data.target  # Add the target variable (Price)

# Display first few rows of the dataset
print("First 5 rows of the dataset:\n", df.head())

# 1. Split the dataset into features (X) and target (y)
X = df.drop('PRICE', axis=1)  # Features (independent variables)
y = df['PRICE']  # Target (dependent variable)

# 2. Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Create a Linear Regression model
model = LinearRegression()

# 4. Train the model using the training data
model.fit(X_train, y_train)

# 5. Make predictions on the test set
y_pred = model.predict(X_test)

# 6. Evaluate the model using Mean Squared Error (MSE)
mse = mean_squared_error(y_test, y_pred)
print("\nMean Squared Error (MSE):", mse)

# Displaying the coefficients for the model
print("\nModel Coefficients:\n", model.coef_)
